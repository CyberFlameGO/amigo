AWSTemplateFormatVersion: "2010-09-09"
Description: AMIgo image copier lambda

Parameters:
  AmigoTopicArn:
    Description: The SNS topic to subscribe to
    Type: String
  AmigoHousekeepingTopicArn:
    Description: The housekeeping SNS topic to subscribe to
    Type: String
  KmsKeyArn:
    Description: Override the default KMS key if required
    Type: String
    Default: ""
  EncryptedTagValue:
    Description: The value of the Encrypted tag on the created AMI
    Type: String
    Default: true
  FunctionCodeBucket:
    Description: The S3 bucket from which to download the lambda function
    Type: String
    Default: deploy-tools-dist
  Stack:
    Description: The stack this relates to
    Type: String
    Default: deploy
  Stage:
    Description: The AMIgo stage this relates to
    Type: String
    AllowedValues:
    - PROD
    - CODE

Conditions:
  ImportKmsKeyArn:
    !Equals [ !Ref KmsKeyArn, "" ]

Resources:
  CopierLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /

  HousekeepingLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /

  LoggingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref CopierLambdaRole
      - !Ref HousekeepingLambdaRole
      PolicyName: LambdaLoggingPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: arn:aws:logs:*:*:*

  KMSKeyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref CopierLambdaRole
      PolicyName: KMSKeyPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: !If
            - ImportKmsKeyArn
            - !ImportValue amigo-imagecopier-key
            - !Ref KmsKeyArn

  ImageCopyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref CopierLambdaRole
      PolicyName: ImageCopyPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - ec2:CopyImage
          - ec2:CreateTags
          Resource: '*'

  HousekeepingPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
      - !Ref HousekeepingLambdaRole
      PolicyName: HousekeepingPolicy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - ec2:DescribeImages
          - ec2:DeregisterImage
          - ec2:DeleteSnapshot
          Resource: '*'

  # Permission for the SNS topic to push events to the Lambda
  InvokeSnapshotLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt ImageCopierLambda.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref AmigoTopicArn

  # Actual subscription
  SubscribeToAmigoTopic:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref AmigoTopicArn
      Protocol: lambda
      Endpoint: !GetAtt ImageCopierLambda.Arn

  # Lambda that actions snapshot requests
  ImageCopierLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda for copying and encrypting AMIgo baked AMIs
      Code:
        S3Bucket: !Ref FunctionCodeBucket
        S3Key: !Sub ${Stack}/${Stage}/imagecopier/imagecopier.zip
      Runtime: java8
      MemorySize: 512
      Handler: com.gu.imageCopier.LambdaEntrypoint::run
      Role: !GetAtt CopierLambdaRole.Arn
      Timeout: 30
      Environment:
        Variables:
          ACCOUNT_ID:
            !Ref AWS::AccountId
          KMS_KEY_ARN: !If
            - ImportKmsKeyArn
            - !ImportValue amigo-imagecopier-key
            - !Ref KmsKeyArn
          ENCRYPTED_TAG_VALUE:
            !Ref EncryptedTagValue
      Tags:
        - Key: App
          Value: image-copier-lambda


  # Permission for the housekeeping SNS topic to push events to the Lambda
  InvokeHousekeepingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt HousekeepingLambda.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref AmigoHousekeepingTopicArn

  # Actual subscription
  SubscribeToHousekeepingAmigoTopic:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref AmigoHousekeepingTopicArn
      Protocol: lambda
      Endpoint: !GetAtt HousekeepingLambda.Arn

  # Lambda that actions snapshot requests
  HousekeepingLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda for housekeeping AMIgo baked AMIs in other accounts
      Code:
        S3Bucket: !Ref FunctionCodeBucket
        S3Key: !Sub ${Stack}/${Stage}/imagecopier/imagecopier.zip
      Runtime: java8
      MemorySize: 256
      Handler: com.gu.imageCopier.LambdaEntrypoint::housekeeping
      Role: !GetAtt HousekeepingLambdaRole.Arn
      Timeout: 30
      Environment:
        Variables:
          ACCOUNT_ID:
            !Ref AWS::AccountId
      Tags:
        - Key: App
          Value: housekeeping-lambda
