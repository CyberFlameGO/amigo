---
- name: Install required dependencies
  apt:
    state: present
    name: [
        'curl',
        'apt-transport-https',
        'lsb-release',
        'gnupg2',
        'jq'
    ]

- name: Add the Wazuh Manager repository and GPG key
  shell: |
    curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | apt-key add -
    echo "deb https://packages.wazuh.com/3.x/apt/ stable main" | tee /etc/apt/sources.list.d/wazuh.list

- name: Install Wazuh Manager
  apt:
    name: wazuh-agent=3.13.1-1
    update_cache: yes

- name: Disable the Wazuh updates
  shell: |
    echo "wazuh-agent hold" | sudo dpkg --set-selections

- name: Store the password
  shell: |
    SECRET_ARN="arn:aws:secretsmanager:{{ secret_region }}:{{ account_id }}:secret:{{ secret_id }}"
    REGION=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/.$//'`

    aws secretsmanager get-secret-value --secret-id $SECRET_ARN \
       --query SecretString --output text --version-stage AWSCURRENT --region $REGION \
       | jq -r .value > /var/ossec/etc/authd.pass

- name: Inject boot script
  copy:
    dest: /usr/local/bin/connect-to-wazuh-manager.sh
    mode: '0744'
    content: |
      #!/bin/bash -x
      MANAGER_IP="{{ manager_ip }}"
      REGION=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone | sed 's/.$//'`

      INSTANCE_ID=`curl -s http://169.254.169.254/latest/meta-data/instance-id`
      FILTERS="Name=resource-id,Values=$INSTANCE_ID Name=resource-type,Values=instance"
      OPTIONS="--query Tags[].Value --output text --region $REGION"

      APP=$(aws ec2 describe-tags --filters $FILTERS Name=key,Values=App $OPTIONS)
      STACK=$(aws ec2 describe-tags --filters $FILTERS Name=key,Values=Stack $OPTIONS)
      STAGE=$(aws ec2 describe-tags --filters $FILTERS Name=key,Values=Stage $OPTIONS)

      cp /var/ossec/etc/ossec.conf /var/ossec/etc/ossec.conf.bak

      sed -i "s/MANAGER_IP/$MANAGER_IP/" /var/ossec/etc/ossec.conf
      sed -i "s/<protocol>udp<\/protocol>/<protocol>tcp<\/protocol>/" /var/ossec/etc/ossec.conf
      cat >> /var/ossec/etc/ossec.conf << EOF
      <ossec_config>
        <labels>
          <label key="aws.app">$APP</label>
          <label key="aws.stack">$STACK</label>
          <label key="aws.stage">$STAGE</label>
        </labels>
      </ossec_config>
      EOF

      # Enroll with manager
      /var/ossec/bin/agent-auth -m $MANAGER_IP -A $INSTANCE_ID

      # Boot agent
      systemctl enable wazuh-agent
      systemctl start wazuh-agent

- name: Inject systemd service unit wazuh-manager-connection.service
  copy:
    dest: /etc/systemd/system/wazuh-manager-connection.service
    mode: '0644'
    content: |
      [Unit]
      After=network.service

      [Service]
      ExecStart=/usr/local/bin/connect-to-wazuh-manager.sh

      [Install]
      WantedBy=default.target

- name: Configure system to connect on first boot
  shell: |
    # Disable wazuh agent until registration happens
    systemctl disable wazuh-agent

    # Load wazuh-manager-connection.service, which we just created
    systemctl daemon-reload

    # Enable it so it runs on first boot
    systemctl enable wazuh-manager-connection.service